INITIALLY, WE TRANSFERRED FIRST RFMO_SAU_GEO TO QA SAU SO THAT WE CAN USE SCRIPTING TO 
TRANSFER THE CONTENTS.

CREATE INDEX rfmo_sau_geo_geom_idx ON rfmo_sau_geo USING gist (geom);
CREATE UNIQUE INDEX rfmo_sau_geo_rfmo_id_idx ON rfmo_sau_geo USING btree (rfmo_id);

create sequence rfmo_sau_geo_gid_seq; 

alter table rfmo_sau_geo
alter gid set default nextval('rfmo_sau_geo_gid_seq');

alter sequence rfmo_sau_geo_gid_seq restart with 1;
update rfmo_sau_geo 
set gid=nextval('rfmo_sau_geo_gid_seq'); 

ALTER TABLE geo.rfmo_sau_geo ADD CONSTRAINT rfmo_sau_geo_rfmo_id_fk
FOREIGN KEY (rfmo_id) REFERENCES web.rfmo(rfmo_id) ON DELETE CASCADE;

alter table rfmo_sau_geo
	add CONSTRAINT rfmo_rfmo_id_fk FOREIGN KEY (rfmo_id) REFERENCES web.rfmo(rfmo_id) ON DELETE CASCADE


I was able to transfer all the contents of the rfmo_sau_geo to the qa sau.geo.rfmo table. 
On the table rfmo_sau_geo I made the indexes on the ids, the index on geom, the foreign key and the gid seq and also 
the primary key. THe only thing I did not do is to create the function RETURN ON v_rfmo (this is found in
the dependencies of the original sau.geo.rfmo table. 

So I took the chance of transferring the contents without creating the function and it worked. 
So I guess the function was not needed. I just based it on what Martin sent me on how 
the table for rfmo was created. There was nothing there saying a function was created. 
