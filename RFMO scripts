---I THOUGHT OF USING THIS POLYGON. THIS IS A COMBINED VERSION OF THE HUDSON COMPLEX AND 
THE ICCAT SHAPEFILE FROM RFMO SAU GEO. ALL I HAD TO DO WAS TO GROUP IT BY ID AND I CAN GET
TO REMOVE THE LINE THAT SEPARATES THE ICCAT SHAPEFILE AND THE HUDSON COMPLEX. BUT IT DIDN'T USE
THIS SCRIPT. INSTEAD I USED ANOTHER ONE BELOW.

select id, st_multi(st_union(geom)) as geom 
from union_hudson_iccat_qgis
group by id; 

---I USED THIS ONE. HERE THE SHAPEFILES ARE SEPARATE AND I JUST USED UNION TO COMBINE THEM. 
JUST LIKE HOW I MERGED THE MARINE LAYER 15 CELLS IN MY EARLIER WORK. THIS COMBINED THE TWO
POLYGONS TOGETHER AND AT THE SAME TIME WAS ABLE TO REMOVE THE LINE THAT MAY HAVE SEPARATED
THEM IF THEY WERE UNIONIZED. 

select a.gid, a.id, a.name, a.rfmo_id, st_multi(st_union(a.geom, b.geom)) as geom
into temp table bard
from iccat_sau_geo a, hudson_complex_unrefined2_exported b 
group by a.gid, a.id, a.name, a.rfmo_id, a.geom, b.geom; 

create table union_hudson_iccat_postgis
(gid int4 null, id float8 null, name varchar(50) null, rfmo_id float8 null, 
geom geometry null); 

insert into union_hudson_iccat_postgis
(gid, id, name, rfmo_id, geom)
select * from bard; 


---ACTUALLY AT FIRST I TRIED TO COMBINE THE TWO POLYGONS USING QGIS BUT IT HAD 
PROBLEMS IN THE SHAPEFILES. ACCORDING TO QGIS I HAVE INVALID GEOMETRIES, SOME GEOMETRIES
WERE LOOPING WITH ITSELF. SO I TRIED COMBINING THEM IN ARCGIS. IT ALSO GAVE ME AN ERROR, 
SAYING I HAD PROBLEMS WITH TOPOLOGY. SO THERE WAS SOMETHING WRONG WITH THE SHAPEFILES. 
I USED ST_ISVALID TO DETERMINE IF THERE ARE INVALID GEOMETRIES IN EITHER OF THE TWO 
POLYGONS I WAS COMBINING. THE ICCAT SHAPEFILE HAD TOPOLOGY PROBLEMS/INVALID GEOMETRIES.

--TO DETERMINE IF THERE AREA INVALID GEOMETRIES THIS SCRIPT WAS USED:
select * from iccat_sau_geo
where st_isvalid(geom)=false;

---TO CORRECT THE INVALID GEOMETRIES THIS ONE WAS USED:
update iccat_sau_geo
set geom=st_makevalid(geom);

---I DIDN'T USE THIS SCRIPT. I HAD PROBLEMS WHEN I EXPORTED THE FILE FROM ARCGIS
TO POSTGIS. I WAS GOING TO RUN SOME SCRIPTS WITH THE UNIONIZED POLYGON BUT POSTGIS
WOULD NOT ACCEPT THE SCRIPT. IT SAYS I HAD PROBLEMS WITH THE GEOMETRY. THAT I HAD A 
GEOMETRY COLLECTION BEING PLACED INTO A MULTIPOLYGON COLUMN. 

ALTER TABLE iccat_sau_geo ALTER COLUMN geom 
    SET DATA TYPE geometry(MultiPolygon) USING ST_Multi(geom);
    
----I USED THIS ONE INSTEAD AND CHANGED THE DATA TYPE TO GEOMETRY AGAIN. I COULDN'T REALLY
FIGURE OUT WHY THAT HAPPENED. I USED TO ALWAYS TRANSFER FROM ARCGIS TO POSTGIS AND IT ALWAYS USED
TO WORK BUT NOW IT DIDN'T. I JUST DON'T KNOW WHY. I DON'T HAVE AN ANSWER. 

ALTER TABLE iccat_sau_geo ALTER COLUMN geom SET DATA TYPE geometry;


select gid, id, name, rfmo_id, st_area(st_transform(geom, 98287))/1000000 area 
into temp table bard1
from union_hudson_iccat_postgis; 

create table union_hudson_iccat_postgis_with_area 
(gid int4 null, id float8 null, name varchar(50) null, rfmo_id float8 null,
area float8 null); 



insert into union_hudson_iccat_postgis_with_area 
(gid, id, name, rfmo_id, area)
select * from bard1; 

---THIS IS HOW I COMPUTED THE AREA. I ACTUALLY GOT THE AREA IN KM2 AND ALSO THE 
AREA IN M2 BUT I COULDN'T COMPUTE FOR PERIMETER BECAUSE I HAD A PROBLEM AGAIN WITH 
MY GEOMETRY. SO I CHECKED THE UNION_HUDSON_ICCAT SHAPEFILE IN ARCGIS. I FOUND THAT
IT SEEM TO HAVE TWO DENTS ON WHERE THE TWO SHAPEFILES WERE JOINED. THEY WERE 
ACTUALLY VERTEXES EXTENDING LONG WITHIN THE SHAPEFILE SO I REMOVED IT. THEN AFTER 
THAT I FOUND OUT ALSO THAT THE SHAPEFILE HAS INVALID GEOMETRIES AGAIN SO I RAN 
THE ST_MAKEVALID SCRIPT. AFTER THIS I WAS ABLE TO COMPUTE FOR THE SHAPE_LENGTH/
PERIMETER.

select gid, id, name, rfmo_id, 
st_area(st_transform(geom, 98287)) area 
from union_hudson_iccat_postgis; 

UPDATE union_hudson_iccat_postgis 
set geom  = ST_SetSRID(geom, 98287);

alter table union_hudson_iccat_postgis_with_area
rename area to area_km2; 

alter table union_hudson_iccat_postgis_with_area
add column shape_length float8 null; 

update union_hudson_iccat_postgis_with_area
set shape_area=88739715742941.0500; 

select gid, name, rfmo_id, 
st_area(st_transform(geom, 98287))/1000000 as area_km2
from union_hudson_iccat_postgis_2t; 

select gid, name, rfmo_id, 
st_perimeter(st_transform(geom, 98287)) as shape_length
from union_hudson_iccat_postgis_2t; 

select * from union_hudson_iccat_postgis_2t
where st_isvalid(geom)=false; 

update union_hudson_iccat_postgis_2t
set geom=st_makevalid(geom); 
