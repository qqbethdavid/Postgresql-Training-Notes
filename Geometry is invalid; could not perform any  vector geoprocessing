-----I found out that the tm_worldborders-0.3 has invalid geometries. I am yet to understand what these
invalid geometries are. That means there are parts of the geom that have problem with vertices. Or they are 
a ring and they self-intersect.
Apparently you can make it valid using the st_makevalid command in postgis. I checked this out 
in Dbeaver although it does not show in the drop down of commands, this command works. 
Ann alternate syntax is st_isvalid. This one also worked in Dbeaver. 
I checked this using the following script.

select geom from tm_world_borders_03
where st_isvalid(geom)= false;

-----This helps to see which of your geometries have invalid geoms in it. 
-----This gave me 4 geometries. These are probably the problematic geometries. 

Then I made them valid using st_makevalid. The following is the script

update tm_world_borders_03
set geom=st_makevalid(geom)
where (un=124) or (un=152) or (un=578) or (un=643); 

Then I checked again using the first script and I have no more invalid geometries. 




BATCH UNION OF SEVERAL GEOMETRIES (THOSE MORE THAN 2). WE CREATE A TABLE AND PUT ALL THE GEOMS WHICH ARE INVALID IN THERE.
THEN WE JOIN THAT TABLE WITH THE MASTER TABLE WHICH WE WANT TO EDIT THE GEOMS IN THE FIRST PLACE. 

select gid, geom from eezv11_x_fao
where st_isvalid(geom)= false;


update eezv11_x_fao
set geom=st_makevalid(geom)
from invalid_geoms
where eezv11_x_fao.gid=invalid_geoms.gid; 


FOR THE CASE OF THE MAKE VALID GEOM SCRIPT NOT WORKING 

This happened to me while working on the layer 3 specie. I looked for the invalid geoms using st_isvalid(geom)= false
and then after running the make valid geom script (st_makevalid(geom)) it did not work. It is because my shapefiles 
were reconstructed using mapshaper in mapshaper.org to make it smaller. The file size was lowered but errors seem to 
abound in the shapefile vertices probably due to intersections etc. 

What I did was this: 

I ran this script --->

UPDATE table 
set geomcol = st_multi(st_collectionextract(st_makevalid(geomcol), 3))
where st_isvalid(geomcol) = false; 

Explanation:

ST_COLLECTIONEXTRACT will pull out a particular type of component from a GeometryCollection. For example, 
St_CollectionExtract(geom, 3) will return a Polygon or MultiPolygon.

Since your column type is MultiPolygon, you may need to wrap St_CollectionExtract with yet another function, 
St_Multi, to coerce POlygon geometries into single-component MultiPolygons. 

Beware St_makevalid - it generally does what you'd expect it to, but  it's not magic and it can occasionally 
"correct" your geometry in unexpected ways. It's a good idea to run a SELECT query first, to see what it has 
in mind. 
GEOMETRY COLLECTION AFTER RUNNING IT 
